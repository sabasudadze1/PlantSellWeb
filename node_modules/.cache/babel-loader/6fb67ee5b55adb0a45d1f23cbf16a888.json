{"ast":null,"code":"import * as constants from \"./constants\";\nexport var attempt = function attempt(email, password) {\n  return {\n    type: constants.ATTEMPT,\n    payload: {\n      params: {\n        email,\n        password\n      }\n    }\n  };\n};\nexport var set = function set(data) {\n  return {\n    type: constants.SET,\n    payload: {\n      auth: data\n    }\n  };\n};\nexport var failure = function failure(isFaild, msg) {\n  return {\n    type: constants.FAILURE,\n    payload: {\n      failure: isFaild,\n      message: msg\n    }\n  };\n};\nexport var loading = function loading(isLoading) {\n  return {\n    type: constants.LOADING,\n    payload: {\n      loading: isLoading\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/Saba/Desktop/PlantsWeb/src/pages/login/actions.js"],"names":["constants","attempt","email","password","type","ATTEMPT","payload","params","set","data","SET","auth","failure","isFaild","msg","FAILURE","message","loading","isLoading","LOADING"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,aAA3B;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAOC,QAAP;AAAA,SAAqB;AACxCC,IAAAA,IAAI,EAAEJ,SAAS,CAACK,OADwB;AAExCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAG;AAACL,QAAAA,KAAD;AAAOC,QAAAA;AAAP;AADJ;AAF+B,GAArB;AAAA,CAAhB;AAMP,OAAO,IAAMK,GAAG,GAAG,SAANA,GAAM,CAACC,IAAD;AAAA,SAAW;AAC1BL,IAAAA,IAAI,EAAEJ,SAAS,CAACU,GADU;AAE1BJ,IAAAA,OAAO,EAAE;AACLK,MAAAA,IAAI,EAAGF;AADF;AAFiB,GAAX;AAAA,CAAZ;AAMP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD,EAASC,GAAT;AAAA,SAAkB;AACrCV,IAAAA,IAAI,EAAEJ,SAAS,CAACe,OADqB;AAErCT,IAAAA,OAAO,EAAE;AACLM,MAAAA,OAAO,EAAGC,OADL;AAELG,MAAAA,OAAO,EAAEF;AAFJ;AAF4B,GAAlB;AAAA,CAAhB;AAOP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,SAAD;AAAA,SAAgB;AACnCd,IAAAA,IAAI,EAAEJ,SAAS,CAACmB,OADmB;AAEnCb,IAAAA,OAAO,EAAE;AACLW,MAAAA,OAAO,EAAEC;AADJ;AAF0B,GAAhB;AAAA,CAAhB","sourcesContent":["import * as constants from \"./constants\";\n\nexport const attempt = (email,password) => ({\n    type: constants.ATTEMPT,\n    payload: {\n        params : {email,password}\n    },\n});\nexport const set = (data) => ({\n    type: constants.SET,\n    payload: {\n        auth : data\n    },\n});\nexport const failure = (isFaild,msg) => ({\n    type: constants.FAILURE,\n    payload: {\n        failure : isFaild,\n        message :msg\n    },\n});\nexport const loading = (isLoading) => ({\n    type: constants.LOADING,\n    payload: {\n        loading: isLoading,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}