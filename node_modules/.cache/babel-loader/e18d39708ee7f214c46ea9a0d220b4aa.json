{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Saba/Desktop/PlantsWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"C:/Users/Saba/Desktop/PlantsWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{applyMiddleware,createStore,combineReducers}from\"redux\";import{composeWithDevTools}from\"redux-devtools-extension\";import{routerReducer,routerMiddleware}from\"react-router-redux\";import createSagaMiddleware from\"redux-saga\";import{createLogger}from\"redux-logger\";import Login from\"./pages/login\";import Signup from\"./pages/signup\";import{all}from\"redux-saga/effects\";import history from\"./utils/helpers/history\";var rootSaga=/*#__PURE__*/_regeneratorRuntime.mark(function rootSaga(){return _regeneratorRuntime.wrap(function rootSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return all([].concat(_toConsumableArray(Login.sagas),_toConsumableArray(Signup.sagas)));case 2:case\"end\":return _context.stop();}}},rootSaga);});var sagaMiddleware=createSagaMiddleware();var logger=createLogger();var rootReducer=function rootReducer(state,action){if(action.type===\"USER_LOGOUT\"||\"CART_OPEN\"||\"MAIN_PAGE\"){state=undefined;}return combineReducers({routing:routerReducer,login:Login.reducers,signup:Signup.reducers})(state,action);};var store=createStore(rootReducer,composeWithDevTools(applyMiddleware(sagaMiddleware,routerMiddleware(history))));sagaMiddleware.run(rootSaga);export{store};","map":{"version":3,"sources":["C:/Users/Saba/Desktop/PlantsWeb/src/store.js"],"names":["applyMiddleware","createStore","combineReducers","composeWithDevTools","routerReducer","routerMiddleware","createSagaMiddleware","createLogger","Login","Signup","all","history","rootSaga","sagas","sagaMiddleware","logger","rootReducer","state","action","type","undefined","routing","login","reducers","signup","store","run"],"mappings":"2SAAA,OAASA,eAAT,CAA0BC,WAA1B,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,aAAT,CAAwBC,gBAAxB,KAAgD,oBAAhD,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,OAASC,YAAT,KAA6B,cAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CACA,OAASC,GAAT,KAAoB,oBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,CAEA,GAAMC,CAAAA,QAAQ,uCAAG,QAAXA,CAAAA,QAAW,oIACf,MAAMF,CAAAA,GAAG,8BACJF,KAAK,CAACK,KADF,qBAEJJ,MAAM,CAACI,KAFH,GAAT,CADe,4CAAXD,QAAW,GAAH,CAAd,CAMA,GAAME,CAAAA,cAAc,CAAGR,oBAAoB,EAA3C,CACA,GAAMS,CAAAA,MAAM,CAAGR,YAAY,EAA3B,CACA,GAAMS,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACrC,GAAIA,MAAM,CAACC,IAAP,GAAgB,aAAhB,EAAiC,WAAjC,EAAgD,WAApD,CAAiE,CAC/DF,KAAK,CAAGG,SAAR,CACD,CACD,MAAOlB,CAAAA,eAAe,CAAC,CACrBmB,OAAO,CAAEjB,aADY,CAErBkB,KAAK,CAAEd,KAAK,CAACe,QAFQ,CAGrBC,MAAM,CAAEf,MAAM,CAACc,QAHM,CAAD,CAAf,CAIJN,KAJI,CAIGC,MAJH,CAAP,CAKD,CATD,CAUA,GAAMO,CAAAA,KAAK,CAAGxB,WAAW,CACvBe,WADuB,CAEvBb,mBAAmB,CACjBH,eAAe,CAACc,cAAD,CACXT,gBAAgB,CAACM,OAAD,CADL,CADE,CAFI,CAAzB,CAQAG,cAAc,CAACY,GAAf,CAAmBd,QAAnB,EACA,OAASa,KAAT","sourcesContent":["import { applyMiddleware, createStore, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { routerReducer, routerMiddleware } from \"react-router-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createLogger } from \"redux-logger\";\nimport Login from \"./pages/login\";\nimport Signup from \"./pages/signup\";\nimport { all } from \"redux-saga/effects\";\nimport history from \"./utils/helpers/history\";\n\nconst rootSaga = function*() {\n  yield all([\n    ...Login.sagas,\n    ...Signup.sagas,\n  ]);\n};\nconst sagaMiddleware = createSagaMiddleware();\nconst logger = createLogger();\nconst rootReducer = (state, action) => {\n  if (action.type === \"USER_LOGOUT\" || \"CART_OPEN\" || \"MAIN_PAGE\") {\n    state = undefined;\n  }\n  return combineReducers({\n    routing: routerReducer,\n    login: Login.reducers,\n    signup: Signup.reducers,\n  })(state, action);\n};\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware,\n        routerMiddleware(history)\n    )\n  )\n);\nsagaMiddleware.run(rootSaga);\nexport { store };\n"]},"metadata":{},"sourceType":"module"}