{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Saba/Desktop/PlantsWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"C:/Users/Saba/Desktop/PlantsWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, createStore, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { routerReducer, routerMiddleware } from \"react-router-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createLogger } from \"redux-logger\";\nimport Login from \"./pages/login\";\nimport Signup from \"./pages/signup\";\nimport { all } from \"redux-saga/effects\";\nimport history from \"./utils/helpers/history\";\n\nvar rootSaga = /*#__PURE__*/_regeneratorRuntime.mark(function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([].concat(_toConsumableArray(Login.sagas), _toConsumableArray(Signup.sagas)));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, rootSaga);\n});\n\nvar sagaMiddleware = createSagaMiddleware();\nvar logger = createLogger();\n\nvar rootReducer = function rootReducer(state, action) {\n  if (action.type === \"USER_LOGOUT\" || \"CART_OPEN\" || \"MAIN_PAGE\") {\n    state = undefined;\n  }\n\n  return combineReducers({\n    routing: routerReducer,\n    login: Login.reducers,\n    signup: Signup.reducers\n  })(state, action);\n};\n\nvar store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware, routerMiddleware(history))));\nsagaMiddleware.run(rootSaga);\nexport { store };","map":{"version":3,"sources":["C:/Users/Saba/Desktop/PlantsWeb/src/store.js"],"names":["applyMiddleware","createStore","combineReducers","composeWithDevTools","routerReducer","routerMiddleware","createSagaMiddleware","createLogger","Login","Signup","all","history","rootSaga","sagas","sagaMiddleware","logger","rootReducer","state","action","type","undefined","routing","login","reducers","signup","store","run"],"mappings":";;AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,oBAAhD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,IAAMC,QAAQ,yCAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AACf,iBAAMF,GAAG,8BACJF,KAAK,CAACK,KADF,sBAEJJ,MAAM,CAACI,KAFH,GAAT;;AADe;AAAA;AAAA;AAAA;AAAA;AAAA,KAAXD,QAAW;AAAA,CAAH,CAAd;;AAMA,IAAME,cAAc,GAAGR,oBAAoB,EAA3C;AACA,IAAMS,MAAM,GAAGR,YAAY,EAA3B;;AACA,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,aAAhB,IAAiC,WAAjC,IAAgD,WAApD,EAAiE;AAC/DF,IAAAA,KAAK,GAAGG,SAAR;AACD;;AACD,SAAOlB,eAAe,CAAC;AACrBmB,IAAAA,OAAO,EAAEjB,aADY;AAErBkB,IAAAA,KAAK,EAAEd,KAAK,CAACe,QAFQ;AAGrBC,IAAAA,MAAM,EAAEf,MAAM,CAACc;AAHM,GAAD,CAAf,CAIJN,KAJI,EAIGC,MAJH,CAAP;AAKD,CATD;;AAUA,IAAMO,KAAK,GAAGxB,WAAW,CACvBe,WADuB,EAEvBb,mBAAmB,CACjBH,eAAe,CAACc,cAAD,EACXT,gBAAgB,CAACM,OAAD,CADL,CADE,CAFI,CAAzB;AAQAG,cAAc,CAACY,GAAf,CAAmBd,QAAnB;AACA,SAASa,KAAT","sourcesContent":["import { applyMiddleware, createStore, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { routerReducer, routerMiddleware } from \"react-router-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createLogger } from \"redux-logger\";\nimport Login from \"./pages/login\";\nimport Signup from \"./pages/signup\";\nimport { all } from \"redux-saga/effects\";\nimport history from \"./utils/helpers/history\";\n\nconst rootSaga = function*() {\n  yield all([\n    ...Login.sagas,\n    ...Signup.sagas,\n  ]);\n};\nconst sagaMiddleware = createSagaMiddleware();\nconst logger = createLogger();\nconst rootReducer = (state, action) => {\n  if (action.type === \"USER_LOGOUT\" || \"CART_OPEN\" || \"MAIN_PAGE\") {\n    state = undefined;\n  }\n  return combineReducers({\n    routing: routerReducer,\n    login: Login.reducers,\n    signup: Signup.reducers,\n  })(state, action);\n};\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware,\n        routerMiddleware(history)\n    )\n  )\n);\nsagaMiddleware.run(rootSaga);\nexport { store };\n"]},"metadata":{},"sourceType":"module"}