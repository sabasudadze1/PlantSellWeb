{"ast":null,"code":"import _classCallCheck from \"C:/Users/Saba/Desktop/PlantsWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Saba/Desktop/PlantsWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/Saba/Desktop/PlantsWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Saba/Desktop/PlantsWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Saba\\\\Desktop\\\\PlantsWeb\\\\src\\\\pages\\\\signup\\\\signup.js\";\nimport React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"./actions\";\nimport { connect } from \"react-redux\";\nimport PublicHead from \"../../components/publicHead\";\nimport DefaultLayout from \"../../layouts\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nexport var Signup = /*#__PURE__*/function (_Component) {\n  _inherits(Signup, _Component);\n\n  var _super = _createSuper(Signup);\n\n  function Signup(props) {\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState({\n        [name]: value\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        submitted: true\n      });\n\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          repassword = _this$state.repassword;\n\n      if (!(email && password) || password !== repassword) {\n        return;\n      }\n\n      _this.props.attempt(email, password);\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      repassword: \"\",\n      submitted: false\n    };\n\n    if (localStorage.getItem(\"authToken\")) {\n      _this.props.history.push('/');\n    }\n\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      var loading = this.props.loading;\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          repassword = _this$state2.repassword,\n          submitted = _this$state2.submitted;\n      var title = \"Registration\";\n      return /*#__PURE__*/React.createElement(DefaultLayout, {\n        title: title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(PublicHead, {\n        title: title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        name: \"form\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        className: 'form-input' + (submitted && !email ? ' error' : ''),\n        value: email,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }), submitted && !email && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"error-block email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, \"Please enter your email\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }, \"password\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: 'form-input' + (submitted && !password ? ' error' : ''),\n        value: password,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }), submitted && !password && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"error-block password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, \"Please enter password\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }, \"Repeat Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"repassword\",\n        className: 'form-input' + (submitted && (!repassword || repassword !== password) ? ' error' : ''),\n        value: repassword,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }), submitted && !repassword && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"error-block repassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 23\n        }\n      }, \"Repeating passwords is mandatory!\"), submitted && repassword !== password && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"error-block repassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 23\n        }\n      }, \"Entered passwords do not match\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"form-btn\",\n        disabled: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }, loading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-spinner  fa-spin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 32\n        }\n      }), \"Please wait ...\") : \"Registration\")), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      }, \"Already have an account? \", /*#__PURE__*/React.createElement(NavLink, {\n        exact: true,\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 46\n        }\n      }, \" Login \"), \" \"))));\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.signup.loading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  var attempt = actions.attempt;\n  return bindActionCreators({\n    attempt\n  }, dispatch);\n};\n\nSignup.propTypes = {\n  loading: PropTypes.bool,\n  attempt: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  })\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["C:/Users/Saba/Desktop/PlantsWeb/src/pages/signup/signup.js"],"names":["React","Component","bindActionCreators","actions","connect","PublicHead","DefaultLayout","NavLink","PropTypes","Signup","props","handleChange","e","target","name","value","setState","handleSubmit","preventDefault","submitted","state","email","password","repassword","attempt","localStorage","getItem","history","push","loading","title","mapStateToProps","signup","mapDispatchToProps","dispatch","propTypes","bool","func","shape","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"./actions\";\nimport { connect } from \"react-redux\";\nimport PublicHead from \"../../components/publicHead\";\nimport DefaultLayout from \"../../layouts\";\nimport {NavLink} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nexport class Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      repassword : \"\",\n      submitted: false,\n    };\n    if(localStorage.getItem(\"authToken\")){\n          this.props.history.push('/')\n    }\n  }\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.setState({ submitted: true });\n    const { email, password,repassword } = this.state;\n    if (!(email && password) || password!==repassword) {\n      return;\n    }\n    this.props.attempt(email,password)\n  };\n  render() {\n    const { loading } = this.props;\n    const { email, password,repassword, submitted  } = this.state;\n    const title = \"Registration\";\n    return (\n      <DefaultLayout title={title}>\n        <PublicHead title={title} />\n        <div className=\"form-box\">\n          <form name=\"form\" onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                className={'form-input' + (submitted && !email ? ' error' : '')}\n                value={email}\n                onChange={this.handleChange}\n              />\n              {submitted && !email && (\n                <div className=\"error-block email\">Please enter your email</div>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">password</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                className={'form-input' + (submitted && !password ? ' error' : '')}\n                value={password}\n                onChange={this.handleChange}\n              />\n              {submitted && !password && (\n                <div className=\"error-block password\">Please enter password</div>\n              )}\n            </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"password\">Repeat Password</label>\n                  <input\n                      type=\"password\"\n                      name=\"repassword\"\n                      className={'form-input' + (submitted && (!repassword || repassword!==password) ? ' error' : '')}\n                      value={repassword}\n                      onChange={this.handleChange}\n                  />\n                  {submitted && !repassword && (\n                      <div className=\"error-block repassword\">Repeating passwords is mandatory!</div>\n                  )}\n                  {submitted && repassword!==password && (\n                      <div className=\"error-block repassword\">Entered passwords do not match</div>\n                  )}\n              </div>\n            <div className=\"form-group\">\n              <button className=\"form-btn\" disabled={loading}>\n                  {loading ? <><i className=\"fas fa-spinner  fa-spin\"/>Please wait ...</> : \"Registration\"}\n              </button>\n            </div>\n              <span>Already have an account? <NavLink exact to='/login'> Login </NavLink> </span>\n          </form>\n        </div>\n      </DefaultLayout>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  loading: state.signup.loading,\n});\nconst mapDispatchToProps = dispatch => {\n  const { attempt  } = actions;\n  return bindActionCreators({ attempt }, dispatch);\n};\nSignup.propTypes = {\n    loading : PropTypes.bool,\n    attempt: PropTypes.func,\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired\n    })\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Signup);\n"]},"metadata":{},"sourceType":"module"}